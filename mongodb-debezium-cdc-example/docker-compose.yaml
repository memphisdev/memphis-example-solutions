---
version: '3'
services:
  db:
    build:
      context: ./mongodb
      no_cache: true
    image: mongodb
    container_name: mongodb
    command: mongod --replSet rs0 --keyFile /mongodb-conf/keyFile --bind_ip_all
    healthcheck:
      test: mongosh --quiet --eval 'db.runCommand("ping").ok' localhost:27017/test
      interval: 3s
      timeout: 3s
      retries: 3
    restart: "on-failure"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "mongodb"

  database-setup:
    build:
      context: ./database-setup
      no_cache: true
    image: mongodb-database-setup
    container_name: mongodb-database-setup
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    environment:
      MONGO_HOSTS: "db:27017"
      MONGO_USERNAME: "root"
      MONGO_PASSWORD: "mongodb"
      REPLICA_SET: "rs0"

  todo-generator:
    build:
      context: ./todo-generator
      no_cache: true
    image: mongodb-todo-generator
    container_name: mongodb-todo-generator
    restart: always
    depends_on:
      db:
        condition: service_healthy
      database-setup:
        condition: service_completed_successfully
    environment:
      MONGO_HOST: "db"
      MONGO_USERNAME: "root"
      MONGO_PASSWORD: "mongodb"

  memphis-metadata:
    image: memphisos/memphis-metadata:15-docker
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memphis -p 5005"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5005:5005"
    environment:
      - POSTGRESQL_USERNAME=memphis
      - POSTGRESQL_PASSWORD=memphis
      - POSTGRESQL_DATABASE=memphis
      - POSTGRESQL_PORT_NUMBER=5005

  memphis:
    image: "memphisos/memphis:latest"
    depends_on:
      memphis-metadata:
        condition: service_healthy
    healthcheck:
      test: wget http://memphis:9000 --spider || exit 1
      interval: 10s
      retries: 30
      start_period: 5s
    restart: "on-failure"
    ports:
      - "9000:9000"
      - "6666:6666"
      - "7770:7770"
    environment:
      - ROOT_PASSWORD=memphis
      - DOCKER_ENV=true
      - ANALYTICS=true
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - METADATA_DB_HOST=memphis-metadata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  memphis-rest-gateway:
    image: "memphisos/memphis-rest-gateway:latest"
    depends_on:
      memphis:
        condition: service_healthy
    restart: "on-failure"
    ports:
      - "4444:4444"
    environment:
      - JWT_SECRET=JWT_TEST_PURPOSE
      - REFRESH_JWT_SECRET=REFRESH_JWT_TEST_PURPOSE
      - USER_PASS_BASED_AUTH=true
      - CONNECTION_TOKEN=memphis
      - ROOT_USER=root
      - ROOT_PASSWORD=memphis
      - MEMPHIS_HOST=memphis
      - HTTP_PORT=4444

  debezium-server:
    build:
      context: ./debezium-server
      no_cache: true
    image: debezium-server
    container_name: debezium-server
    restart: always
    healthcheck:
      test: wget --spider http://debezium-server:8080/q/health || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      memphis-rest-gateway:
        condition: service_started
    ports:
      - "8080:8080"
    volumes:
      - ./debezium-conf:/debezium-server/conf:ro

  printing-consumer:
    build:
      context: ./printing-consumer
      no_cache: true
    image: printing-consumer
    container_name: printing-consumer
    restart: always
    depends_on:
      memphis:
        condition: service_healthy
    environment:
      MEMPHIS_HOST: "memphis"
      MEMPHIS_USERNAME: "todocdcservice"
      MEMPHIS_PASSWORD: "todocdcservice"
      MEMPHIS_STATION: "todo-cdc-events"

  cleaned-printing-consumer:
    build:
      context: ./printing-consumer
      no_cache: true
    image: printing-consumer
    container_name: cleaned-printing-consumer
    restart: always
    depends_on:
      memphis:
        condition: service_healthy
    environment:
      MEMPHIS_HOST: "memphis"
      MEMPHIS_USERNAME: "todocdcservice"
      MEMPHIS_PASSWORD: "todocdcservice"
      MEMPHIS_STATION: "cleaned-todo-cdc-events"

  cdc-transformer:
    build:
      context: ./cdc-transformer
      no_cache: true
    image: cdc-transformer
    container_name: cdc-transformer
    restart: always
    depends_on:
      memphis:
        condition: service_healthy
    environment:
      MEMPHIS_HOST: "memphis"
      MEMPHIS_USERNAME: "todocdcservice"
      MEMPHIS_PASSWORD: "todocdcservice"
      MEMPHIS_INPUT_STATION: "todo-cdc-events"
      MEMPHIS_OUTPUT_STATION: "cleaned-todo-cdc-events"
